# ************************************************************************************************
# Warning: YAML source code for Canvas Apps should only be used to review changes made within Power Apps Studio and for minor edits (Preview).
# Use the maker portal to create and edit your Power Apps.
# 
# The schema file for Canvas Apps is available at https://go.microsoft.com/fwlink/?linkid=2304907
# 
# For more information, visit https://go.microsoft.com/fwlink/?linkid=2292623
# ************************************************************************************************
Screens:
  Screen1:
    Children:
      - RectMeetingBkg1:
          Control: Rectangle@2.3.0
          Properties:
            Fill: =RGBA(240, 240, 240, 1)
            Height: =42
            Visible: =_calendarVisible
            Width: =Parent.Width - Self.X
            X: =422
            Y: =RectQuickActionBar1.Height
      - RectQuickActionBar1:
          Control: Rectangle@2.3.0
          Properties:
            Height: =64
            Width: =Parent.Width
      - LblAppName1:
          Control: Label@2.5.1
          Properties:
            BorderColor: =RGBA(0, 0, 0, 1)
            Color: =App.Theme.Colors.PrimaryForeground
            Height: =64
            PaddingLeft: =0
            Size: =18
            Text: ="Calendar"
            Width: =Parent.Width - Self.X * 2
            Wrap: =false
            X: =32
      - LblResetToday1:
          Control: Label@2.5.1
          Properties:
            Align: =Align.Center
            BorderColor: =RGBA(0, 0, 0, 1)
            Color: =iconCalendar1.Color
            FontWeight: =FontWeight.Bold
            Height: =iconCalendar1.Height
            PaddingTop: =12
            Size: =11
            Text: =DateDiff(Date(Year(Today()), Month(Today()), 1), Today(), TimeUnit.Days) + 1
            Width: =iconCalendar1.Width
            X: =iconCalendar1.X
            Y: =iconCalendar1.Y
      - iconCalendar1:
          Control: Classic/Icon@2.5.0
          Properties:
            Height: =40
            Icon: =Icon.CalendarBlank
            OnSelect: |-
              =/*resets calendar view and date selection to today*/
              Set(_dateSelected, Today());
              Set(_firstDayOfMonth, DateAdd(Today(), 1 - Day(Today()), TimeUnit.Days));
              Set(_firstDayInView, DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), TimeUnit.Days));
              Set(_lastDayOfMonth, DateAdd(DateAdd(_firstDayOfMonth, 1, TimeUnit.Months), -1, TimeUnit.Days))
            TabIndex: =0
            Tooltip: ="Reset selected date to today"
            Width: =40
            X: =395 - Self.Width
            Y: =dropdownCalendarSelection1.Y
      - dropdownCalendarSelection1:
          Control: Classic/DropDown@2.3.1
          Properties:
            Default: =_myCalendar.DisplayName
            Items: =Office365Outlook.CalendarGetTables().value
            Items.Value: =DisplayName
            OnChange: =Select(dropdownCalendarSelection1)
            OnSelect: |-
              =/*retrieves calendar events for all days in current month view and selected calendar 
              _minDate and _maxDate act as markers to prevent duplicate data collection*/         
              If(IsBlank(_userDomain),         
              	UpdateContext({_showLoading: true});         
              	Set(_userDomain, Right(User().Email, Len(User().Email) - Find("@", User().Email)));         
              	Set(_dateSelected, Today());         
              	Set(_firstDayOfMonth, DateAdd(Today(), 1 - Day(Today()), TimeUnit.Days));         
              	Set(_firstDayInView, DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), TimeUnit.Days));         
              	Set(_lastDayOfMonth, DateAdd(DateAdd(_firstDayOfMonth, 1, TimeUnit.Months), -1, TimeUnit.Days))         
              );         
              Set(_calendarVisible, false);         
              UpdateContext({_showLoading: true});         
              Set(_myCalendar, Self.Selected);         
              Set(_minDate, DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), TimeUnit.Days));         
              Set(_maxDate, DateAdd(DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), TimeUnit.Days), 40, TimeUnit.Days));         
              ClearCollect(MyCalendarEvents, Office365Outlook.GetEventsCalendarViewV2(_myCalendar.Name, Text(_minDate, DateTimeFormat.UTC), Text(_maxDate, DateTimeFormat.UTC)).value);         
              UpdateContext({_showLoading: false});         
              Set(_calendarVisible, true)
            Tooltip: ="Select a calendar"
            Width: =307
            X: =32
            Y: =RectQuickActionBar1.Height + 24
      - LblMonthSelected1:
          Control: Label@2.5.1
          Properties:
            Align: =Align.Center
            BorderColor: =RGBA(0, 0, 0, 1)
            Height: =50
            Size: =18
            Text: =Text(_firstDayOfMonth, "mmmm yyyy")
            Visible: =_calendarVisible
            Width: =419
            Wrap: =false
            Y: =dropdownCalendarSelection1.Y + dropdownCalendarSelection1.Height + 40
      - iconPrevMonth1:
          Control: Classic/Icon@2.5.0
          Properties:
            Height: =50
            Icon: =Icon.ChevronLeft
            OnSelect: |-
              =/*changes month view to previous month*/
              Set(_firstDayOfMonth, DateAdd(_firstDayOfMonth, -1, TimeUnit.Months));
              Set(_firstDayInView, DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), TimeUnit.Days));
              Set(_lastDayOfMonth, DateAdd(DateAdd(_firstDayOfMonth, 1, TimeUnit.Months), -1, TimeUnit.Days));
              /*collects calendar events for all days in current month view. Updates _minDate to prevent duplicate data collection if user returns to this month view*/
              If(_minDate > _firstDayOfMonth, Set(_minDate, _firstDayOfMonth); Collect(MyCalendarEvents, Office365Outlook.GetEventsCalendarViewV2(_myCalendar.Name, Text(_minDate, DateTimeFormat.UTC), Text(_lastDayOfMonth, DateTimeFormat.UTC)).value))
            PaddingBottom: =7
            PaddingLeft: =7
            PaddingRight: =7
            PaddingTop: =7
            TabIndex: =0
            Tooltip: ="View previous month"
            Visible: =_calendarVisible
            Width: =59
            Y: =LblMonthSelected1.Y
      - iconNextMonth1:
          Control: Classic/Icon@2.5.0
          Properties:
            Height: =50
            Icon: =Icon.ChevronRight
            OnSelect: |-
              =/*changes month view to next month*/
              Set(_firstDayOfMonth, DateAdd(_firstDayOfMonth, 1, TimeUnit.Months));
              Set(_firstDayInView, DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), TimeUnit.Days));
              /*collects calendar events for all days in current month view. Updates _maxDate to prevent duplicate data collection if user returns to this month view*/
              Set(_lastDayOfMonth, DateAdd(DateAdd(_firstDayOfMonth, 1, TimeUnit.Months), -1, TimeUnit.Days));
              If(_lastDayOfMonth > _maxDate, Set(_maxDate, _lastDayOfMonth); Collect(MyCalendarEvents, Office365Outlook.GetEventsCalendarViewV2(_myCalendar.Name, Text(_firstDayOfMonth, DateTimeFormat.UTC), Text(_maxDate, DateTimeFormat.UTC)).value))
            PaddingBottom: =7
            PaddingLeft: =7
            PaddingRight: =7
            PaddingTop: =7
            TabIndex: =0
            Tooltip: ="View next month"
            Visible: =_calendarVisible
            Width: =59
            X: =419 - Self.Width
            Y: =LblMonthSelected1.Y
      - WeekdayGallery1:
          Control: Gallery@2.15.0
          Variant: WeekdayGallery
          Properties:
            BorderColor: =App.Theme.Colors.Darker40
            Height: =45
            Items: =Calendar.WeekdaysShort()
            TemplatePadding: =0
            Visible: =_calendarVisible
            Width: =420
            X: =0
            Y: =LblMonthSelected1.Y + LblMonthSelected1.Height + 10
          Children:
            - Title1:
                Control: Label@2.5.1
                Properties:
                  Align: =Align.Center
                  BorderColor: =RGBA(0, 0, 0, 1)
                  Height: =WeekdayGallery1.TemplateHeight
                  OnSelect: =Select(Parent)
                  Size: =17 * WeekdayGallery1.TemplateWidth / 77
                  Text: =ThisItem.Value
                  Width: =WeekdayGallery1.TemplateWidth
                  Wrap: =false
                  X: =WeekdayGallery1.TemplateWidth / 2 - Self.Width / 2
                  Y: =WeekdayGallery1.TemplateHeight / 2 - Self.Height / 2
      - MonthDayGallery1:
          Control: Gallery@2.15.0
          Variant: MonthDayGallery
          Properties:
            BorderColor: =App.Theme.Colors.Darker40
            Height: =425
            Items: =[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19, 20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41]
            TemplatePadding: =0
            TemplateSize: =60
            Visible: =_calendarVisible
            Width: =420
            X: =0
            Y: =WeekdayGallery1.Y + WeekdayGallery1.Height
          Children:
            - Circle1:
                Control: Circle@2.3.0
                Properties:
                  Fill: =App.Theme.Colors.Lighter70
                  Height: =Self.Width
                  OnSelect: =Select(Parent)
                  Visible: |-
                    =/*Visible if calendar events are found on this day*/               
                    CountRows(Filter(MyCalendarEvents, DateValue(Text(Start)) = DateAdd(_firstDayInView,ThisItem.Value, TimeUnit.Days))) > 0 && !Subcircle1.Visible && Title2.Visible
                  Width: =6.5
                  X: =MonthDayGallery1.TemplateWidth / 2 - Self.Width / 2
                  Y: =MonthDayGallery1.TemplateHeight * (0.75)
            - Subcircle1:
                Control: Circle@2.3.0
                Properties:
                  Height: =3 * Title2.Size
                  OnSelect: =Select(Parent)
                  Visible: =And(DateAdd(_firstDayInView, ThisItem.Value) = _dateSelected, Title2.Visible)
                  Width: =Self.Height
                  X: =MonthDayGallery1.TemplateWidth/2 - Self.Width/2
                  Y: =MonthDayGallery1.TemplateHeight / 2 - Self.Height / 2
            - Title2:
                Control: Label@2.5.1
                Properties:
                  Align: =Align.Center
                  BorderColor: =RGBA(0, 0, 0, 0)
                  Color: =If(DateAdd(_firstDayInView, ThisItem.Value) = _dateSelected, RGBA(255, 255, 255, 1), DateAdd(_firstDayInView, ThisItem.Value) = Today(), RGBA(47, 41, 43, 1), LblMonthSelected1.Color)
                  Fill: |-
                    =/*Fill value changes if the gallery item day = today, or if it lies outside of the current month*/             
                    If(
                        /*Date selected is today*/
                        DateAdd(_firstDayInView, ThisItem.Value) = Today() && DateAdd(_firstDayInView, ThisItem.Value) = _dateSelected, RGBA(0,0,0,0),
                        /*Today when it is not selected*/
                        DateAdd(_firstDayInView, ThisItem.Value) = Today(), ColorFade(Subcircle1.Fill, 0.67), 
                        /*The day is outside the range of the currently selected month*/
                        Abs(Self.Text - ThisItem.Value) > 10,RGBA(200, 200, 200, 0.3), RGBA(0, 0, 0, 0))
                  FocusedBorderColor: =Self.Color
                  FocusedBorderThickness: =2
                  Height: =MonthDayGallery1.TemplateHeight
                  OnSelect: =Set(_dateSelected, DateAdd(_firstDayInView, ThisItem.Value, TimeUnit.Days))
                  Size: =17 * MonthDayGallery1.TemplateWidth / 91
                  TabIndex: =0
                  Text: =Day(DateAdd(_firstDayInView,ThisItem.Value, TimeUnit.Days))
                  Visible: |-
                    =/*This item is in a row containing no days of the visible month. It is in the row after the row where the last day of the month occurs*/ 
                     !(DateAdd(_firstDayInView,ThisItem.Value, TimeUnit.Days) - Weekday(DateAdd(_firstDayInView,ThisItem.Value, TimeUnit.Days)) + 1 > _lastDayOfMonth)
                  Width: =MonthDayGallery1.TemplateWidth
                  Wrap: =false
      - LblDateSelected1:
          Control: Label@2.5.1
          Properties:
            BorderColor: =RGBA(0, 0, 0, 1)
            Height: =RectMeetingBkg1.Height
            Text: =Text(_dateSelected, DateTimeFormat.LongDate)
            Visible: =_calendarVisible
            Width: =Parent.Width / 3 - 60
            Wrap: =false
            X: =451
            Y: =RectQuickActionBar1.Height
      - CalendarEventsGallery1:
          Control: Gallery@2.15.0
          Variant: CalendarEventsGallery
          Properties:
            BorderColor: =App.Theme.Colors.Darker40
            Height: =Parent.Height - Self.Y
            Items: |-
              =/*Shows events only on selected date*/
              SortByColumns(Filter(MyCalendarEvents, Text(Start, DateTimeFormat.ShortDate) = Text(_dateSelected, DateTimeFormat.ShortDate)), "Start")
            TemplatePadding: =0
            Visible: =_calendarVisible
            Width: =Parent.Width - Self.X
            X: =422
            Y: =LblDateSelected1.Y + LblDateSelected1.Height
          Children:
            - Rectangle1:
                Control: Rectangle@2.3.0
                Properties:
                  BorderThickness: =If(ThisItem.Id = _selectedCalendarEvent.Id, 2, 0)
                  Fill: =RGBA(0,0,0,0)
                  Height: =Parent.TemplateHeight
                  HoverFill: =RGBA(0,0,0,0)
                  OnSelect: =Select(Title3)
                  TabIndex: =0
                  Width: =Parent.TemplateWidth
            - iconLocation1:
                Control: Classic/Icon@2.5.0
                Properties:
                  Height: =Subtitle1.Height
                  Icon: =Icon.Waypoint
                  OnSelect: =Select(Title3)
                  TabIndex: =0
                  Width: =28
                  X: =Title3.X
                  Y: =Subtitle1.Y
            - Title3:
                Control: Label@2.5.1
                Properties:
                  BorderColor: =Self.Color
                  FocusedBorderThickness: =2
                  FontWeight: =FontWeight.Semibold
                  Height: =Self.Size * 1.8
                  OnSelect: =Set(_selectedCalendarEvent, ThisItem)
                  Size: =19 * CalendarEventsGallery1.TemplateHeight / 105
                  TabIndex: =0
                  Text: =ThisItem.Subject
                  Tooltip: =ThisItem.Subject
                  Width: =CalendarEventsGallery1.TemplateWidth - Self.X - 10
                  Wrap: =false
                  X: =Body1.X + Body1.Width + 10
                  Y: =CalendarEventsGallery1.TemplateHeight / 4 - Self.Height / 2 + 5
            - Subtitle1:
                Control: Label@2.5.1
                Properties:
                  FocusedBorderThickness: =2
                  FontWeight: =FontWeight.Lighter
                  Height: =Self.Size * 2
                  OnSelect: =Select(Title3)
                  PaddingBottom: =0
                  Size: =18 * CalendarEventsGallery1.TemplateHeight / 105
                  Text: =ThisItem.Location
                  Tooltip: =ThisItem.Location
                  Width: =CalendarEventsGallery1.TemplateWidth - Self.X - 10
                  Wrap: =false
                  X: =iconLocation1.X + iconLocation1.Width + 10
                  Y: =3 / 4 * CalendarEventsGallery1.TemplateHeight - Self.Height / 2 - 5
            - Body1:
                Control: Label@2.5.1
                Properties:
                  BorderColor: =RGBA(0, 0, 0, 1)
                  FocusedBorderThickness: =2
                  Height: =Title3.Height
                  OnSelect: =Select(Title3)
                  Size: =17 * CalendarEventsGallery1.TemplateHeight / 105
                  Text: =Text(ThisItem.Start, DateTimeFormat.ShortTime)
                  Width: =110
                  Wrap: =false
                  X: =32
                  Y: =Title3.Y
            - Description1:
                Control: Label@2.5.1
                Properties:
                  BorderColor: =RGBA(0, 0, 0, 1)
                  FocusedBorderThickness: =2
                  Height: =Subtitle1.Height
                  OnSelect: =Select(Title3)
                  Size: =17 * CalendarEventsGallery1.TemplateHeight / 105
                  Text: =DateDiff(ThisItem.Start, ThisItem.End, TimeUnit.Minutes) & Lower(Left("Minute_Name", 1))
                  Width: =100
                  Wrap: =false
                  X: =32
                  Y: =Subtitle1.Y
            - Separator1:
                Control: Rectangle@2.3.0
                Properties:
                  Fill: =App.Theme.Colors.Darker30
                  Height: =1
                  OnSelect: =Select(Parent)
                  Width: =Parent.TemplateWidth
                  Y: =Parent.TemplateHeight - 1
      - iconEmptyState1:
          Control: Classic/Icon@2.5.0
          Properties:
            DisplayMode: =DisplayMode.View
            Icon: =Icon.CalendarBlank
            Visible: =IsBlank(_userDomain)
            X: =2* Parent.Width/3 - Self.Width / 2
            Y: =LblNoEvents1.Y - Self.Height
      - LblNoEvents1:
          Control: Label@2.5.1
          Properties:
            Align: =Align.Center
            BorderColor: =RGBA(0, 0, 0, 1)
            DisplayMode: =DisplayMode.View
            Height: =220
            Size: =15
            Text: =If(IsBlank(_userDomain), "Select a calendar from the drop down to begin", _showLoading, "Loading events...", "No events scheduled")
            Visible: =IsBlank(_userDomain) || _showLoading || And(CountRows(CalendarEventsGallery1.AllItems) = 0 && _calendarVisible)
            Width: =600
            X: =2* Parent.Width/3 - Self.Width / 2
            Y: =CalendarEventsGallery1.Y + CalendarEventsGallery1.Height/2 - Self.Height/2
      - RectCalendarSeparator1:
          Control: Rectangle@2.3.0
          Properties:
            Fill: =App.Theme.Colors.Darker30
            Height: =Parent.Height - Self.Y
            Width: =2
            X: =420
            Y: =RectQuickActionBar1.Height
